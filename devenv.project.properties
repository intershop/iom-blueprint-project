################################################################################
#
# IMPORTANT INFORMATION
#
# This file is only intended for changing configuration values, not comments.
#
# This file is generated from a template. With each update of devenv-4-iom it
# has to be updated. Only the settings are taken over during this process. All
# additional comments you may have added to the file will be lost.
#
################################################################################

# This ID has to be defined before using this configuration the first time. All
# your devenv4iom configurations have to use unique IDs, since the IDs are needed
# to isolate devenv4iom instances from each other on Docker and on Kubernetes
# level. Once used, you must not change the ID again, otherwise it might be
# difficult to remove according Docker-/Kubernetes-resources afterwards.
# In order to avoid name clashes with standard namespaces, ID must not beginn
# with one of the following strings:
# - default
# - docker
# - kube
ID="iomblueprint"

################################################################################
# Docker Image Settings
################################################################################

# The image pull policy defines when to pull docker images.
# If left empty, it defaults to "Always", which makes development easy, as
# always the newest version of the requested Docker image will be used. It can
# be set to any value allowed by ImagePullPolicy.
# See https://kubernetes.io/docs/concepts/configuration/overview/#container-images
IMAGE_PULL_POLICY=IfNotPresent

# Name of Kubernetes secret to be used, if authentication at a private Docker
# registry is required. The secret has to be created manually in default
# namespace.
# More information about pull secrets can be found at:
# - https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
# - https://docs.microsoft.com/en-us/azure/container-registry/container-registry-auth-kubernetes
IMAGE_PULL_SECRET=

# postgres image (name:tag)
# example:                  postgres:11
DOCKER_DB_IMAGE=postgres:12

# mailhog image (name:tag)
# example:                  mailhog/mailhog
MAILHOG_IMAGE=mailhog/mailhog

# iom dbaccount image (name:tag)
# examples:
# local image:                      iom-dbaccount:1.3.0.0
# release from ISH Docker registry: docker.intershop.de/intershophub/iom-dbaccount:1.3.0.0
IOM_DBACCOUNT_IMAGE=docker-internal.rnd.intershop.de/intershophub/iom-dbaccount:1.4.0

# iom config image (name:tag)
# examples:
# local image:                      iom-config:3.7.0.0
# locally built project image:      prj-iom-config:3.7.0.0-1.2.0.0-SNAPSHOT
# IOM release from ISH registry:    docker.intershop.de/intershophub/iom-config:3.7.0.0
IOM_CONFIG_IMAGE=

# iom app image (name:tag)
# examples:
# local image:                      iom-app:3.7.0.0
# locally built project image:      prj-iom-app:3.7.0.0-1.2.0.0-SNAPSHOT
# IOM release from ISH registry:    docker.intershop.de/intershophub/iom-app:3.7.0.0
IOM_APP_IMAGE=

# iom image (name:tag)
# beginning with IOM 4 the distribution model of IOM was changed from two to one
# docker image. devenv-4-iom can be used with both types of IOM, double and
# single image distribution.
# If IOM_IMAGE is set, the properties IOM_CONFIG_IMAGE and IOM_APP_IMAGE will
# be ignored.
# examples:
# local image:                      iom:4.0.0.0
# locally built project image:      prj-iom:4.0.0.0-1.2.0.0-SNAPSHOT
# IOM release from ISH registry:    docker.intershop.de/intershophub/iom:4.0.0.0
IOM_IMAGE=docker.io/library/iom-blueprint-project-iom:1.0.0-SNAPSHOT

################################################################################
# Database Configuration
################################################################################

# Connection to external database
# Fill these two variables, if you want to use an external database.
# If left empty, the database is managed internally. Connection settings are
# known in this case and do not need to be configured otherwise.
PGHOST=
PGPORT=
# if using an Azure service as postgres server, the user name has to be extended
# by a suffix, which is starting with '@'. This suffix has to be set in variable
# PGUSER_CONNECTION_SUFFIX. The suffix must not appended to variables PGUSER
# and OMS_DB_USER!
PGUSER_CONNECTION_SUFFIX=

# Administrative access to database
# Will be used by dbaccount-image, when creating the OMS database
PGUSER="postgres"
PGPASSWORD="postgres"
PGDATABASE="postgres"
OMS_DB_OPTIONS="ENCODING='UTF8' LC_COLLATE='en_US.utf8' LC_CTYPE='en_US.utf8' CONNECTION LIMIT=-1"
OMS_DB_SEARCHPATH="customer, oms, omt, product, admin, bizconf, testcases"

# IOM database
# Values will be used when creating and accessing the OMS account
OMS_DB_USER="oms_user"
OMS_DB_PASS="oms_pw"
OMS_DB_NAME="oms_db"

################################################################################
# IOM Runtime Configuration
################################################################################

# Projects may have environment specific configurations, test data, etc.
# PROJECT_ENV_NAME assigns the environment name to the installation.
PROJECT_ENV_NAME=dev

# Projects may contain test data which are automatically imported when
# starting IOM if this propertie is set to 'true'. If import is not finished
# before reaching timeout, the container will end with an error.
PROJECT_IMPORT_TEST_DATA=true
PROJECT_IMPORT_TEST_DATA_TIMEOUT=300

# Hostname to be used for the OMS_PUBLIC_URL
# If left empty, HOST_IOM defaults to output of "hostname" command.
HOST_IOM=

# For some developer tasks, the execution of health checks might be a problem,
# e.g. when working on monitoring. In this case, you can set the variable to
# 'false' to avoid the execution of health checks.
# Any change made on health check configuration triggers a restart of the IOM
# pod. Therefore it is recommended to use the following process when changing
# this setting:
# - change config variable
# - devenv-cli.sh delete iom
# - devenv-cli.sh create iom
PERFORM_HEALTH_CHECKS=true

JBOSS_JAVA_OPTS="-Xms1024M -Xmx2048M"

JBOSS_XA_POOLSIZE_MIN="10"
JBOSS_XA_POOLSIZE_MAX="50"

################################################################################
# Database settings (not applied to external database)
################################################################################

# Postgres arguments
POSTGRES_ARGS=( "-N" "500" "-c" "max_prepared_transactions=100" "-c" "log_line_prefix='%a %m %u %i [%p] %c '" "-c" "log_min_duration_statement=500"  )

# If you want to keep database data even after a Kubernetes restart, you have to set
# KEEP_DATABASE_DATA to true, otherwise false.
KEEP_DATABASE_DATA=true

################################################################################
# Log seetings
################################################################################

# Log level for different scopes of iom-application. Supported levels are:
#   FATAL, ERROR, WARN, INFO, DEBUG, TRACE, ALL
OMS_LOGLEVEL_CONSOLE=WARN
OMS_LOGLEVEL_IOM=INFO
OMS_LOGLEVEL_HIBERNATE=WARN
OMS_LOGLEVEL_QUARTZ=WARN
OMS_LOGLEVEL_ACTIVEMQ=WARN
OMS_LOGLEVEL_CUSTOMIZATION=INFO

# Log level of helper scripts (dbmigrate, etc.). Supported levels are:
#   ERROR, WARN, INFO, DEBUG
OMS_LOGLEVEL_SCRIPTS=INFO

# Log level of devenv-cli.sh itself. Supported levels are:
#   ERROR, WARN, INFO, DEBUG
OMS_LOGLEVEL_DEVENV=INFO

# comma separated list of operationIDs
# for any operationID listed here, according REST requests/responses are
# logged into a debug message.
OMS_LOG_REST_IDS=

################################################################################
# Windows subsystem for Linux settings
################################################################################

# Depending on the current version of Windows subsystem for Linux it might be
# necessary to define a MOUNT_PREFIX, that is used when mounting file-systems
# to Docker containers.
# In case of WSL2 (and only in this particular case), MOUNT_PREFIX has to be
# set to /run/desktop/mnt/host. In any other case, it must remain empty.

MOUNT_PREFIX="/run/desktop/mnt/host"

################################################################################
# Development settings
################################################################################

# The following config variables use the same pattern:
# If you want to use a certain aspect of development, you have to define the
# location of custom files that should be used by the developer VM.
# You must ensure that the referenced directories are shared with the
# Docker Desktop.
# Each of these config variables can be defined with an absolute or relative
# path. If a relative path is configured, the according absolute path is
# determined at runtime. If a project specific configuration file exists
# (devenv.project.properties), the directory holding this configuration file
# will be used as base directory for the relative path.
# If no project specific configuration file exists at all, a relative path
# will be expanded relative to the current working directory.

# Deployment of custom artifacts
# see: devenv-cli.sh apply deployment --help
CUSTOM_APPS_DIR="target"

# Development of custom mail templates
# See: devenv-cli.sh apply mail-templates --help
CUSTOM_TEMPLATES_DIR="src/mail-templates"

# Development of custom XSL templates
# See: devenv-cli.sh apply xsl-templates --help
CUSTOM_XSLT_DIR="src/xsl-templates"

# Development of migration scripts
# See: devenv-cli.sh apply dbmigrate --help
CUSTOM_DBMIGRATE_DIR=""

# Load/create custom dumps
# See: devenv-cli.sh dump load --help
# See: devenv-cli.sh dump create --help
CUSTOM_DUMPS_DIR=""

# Development of custom sql-config
# See: devenv-cli.sh apply sql-config --help
CUSTOM_SQLCONF_DIR="target/sql-config"

# Development of custom json-config
# See: devenv-cli.sh apply json-config --help
CUSTOM_JSONCONF_DIR=""

################################################################################
# Access to developer VM
################################################################################

# Access to shared FS
# -------------------
# If you want to access the shared file system of IOM, you have to define a
# directory which should be used for this purpose. If you want to use this
# feature, you have to make sure that this directory is shared with Docker
# Desktop.
# CUSTOM_SHARE_DIR can be defined with an absolute or relative path. If a
# relative path is configured, the according absolute path is determined at
# runtime. If a project specific configuration file exists
# (devenv.project.properties), the directory holding this configuration file
# will be used as base directory for the relative path.
# If no project specific configuration file exists at all, a relative path
# will be expanded relative to the current working directory.
CUSTOM_SHARE_DIR="devenv-share"

################################################################################
# Multi-instance settings
################################################################################

# After changing INDEX or PORT_OFFSET, the IOM cluster has to be deleted and
# newly created. Additionally, the HTML doc and geb/ws-properties should be
# updated:
#   devenv-cli.sh update doc
#   devenv-cli.sh update geb-props
#   devenv-cli.sh update ws-props

# INDEX is used in combination with PORT_OFFSET to auto-generate a port
# forwarding for all used ports in order to run multiple IOM environments in
# parallel.
INDEX=0

# PORT_OFFSET is used in combination with INDEX to auto-generate a port
# forwarding for all used ports in order to run multiple IOM environments in
# parallel.
# Usually, there is no need to change PORT_OFFSET.
PORT_OFFSET=10
